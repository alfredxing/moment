let prefs = browser.storage.local.get('prefs');let background = "#1d2120",text = "#f2efe8",degrees = "",temp = "f",clock = "12",expires = "",weather = "",tform = "H:M:S",dform = "M D, Y",loc = ":auto",font = "100",zero = "y",css = "",interval;function recall(res) {  console.log('in recall');  console.log(res);  console.log(res["loc"]);	background = res["background"] || "#1d2120";	document.body.style.background = background;	text = res["text"].toUpperCase() || "#f2efe8";	document.body.style.color = text;	$(".wunderground").css("color",text);	tform = res["tform"] || "H:M:S";	dform = res["dform"] || "M D, Y";	temp = res["temp"] || "f";	clock = res["clock"] || "12";	degrees = res["degrees"];	weather = res["weather"];	expires = res["expires"];	loc = res["loc"] || ":auto";	font = res["font"] || "100";	zero = res["zero"] || "y";	css = res["css"] || "";	console.log(loc);	refresh();	getWeather();}function request() {  console.log('in request');  console.log(loc);	$.ajax({		url : "https://api.aerisapi.com/observations/closest?p="+loc+"&client_id=wgE96YE3scTQLKjnqiMsv&client_secret=sFA4Gfz8s8brxUUHoZTQ3iZIRy6YSwLhf1wJQzDi",		dataType : "json",		success : function(r) {			let e = r.response[0].ob.weather;			let f;			if (temp.toUpperCase() === "F") {				f = r.response[0].ob.tempF;			}			else {				f = r.response[0].ob.tempC;			}			$("#degrees").text(f);			$("#weather").text(e);			$("#conditions").animate({opacity:1},300);			storeWeather(f, e)		}	});}function refresh() {	let v = new Date();	let p = v.getHours();	let q = v.getMinutes();	let t = v.getSeconds();	if (clock === "12" && p > 12) {		p = p - 12;	}	if (10 > p && zero === "y") {		p = "0" + p	}	if (10 > q) {		q = "0" + q	}	if (10 > t) {		t = "0" + t	}	// let r = p + "" + q + "" + t;	let r = tform.replace("H",p).replace("M",q).replace("S",t);	let u = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];	let o = v.getMonth();	let n = u[o]; // month	let l = v.getDate(); // day	let m = v.getYear(); // year	if (m < 2000) {		m = m + 1900	}	// let s = n + " " + l + " " + m;	let s = dform.replace("D",l).replace("Y",m).replace("M",n);	$("#time").html(r);	$("#date").html(s);}function storeWeather(d,w) {	let a = new Date();	let c = a.getTime();	c += 60 * 1000;	a.setTime(c);  let settings = {    background : background,    text : text,    degrees : d,    temp : temp,    clock : clock,    expires : a.toGMTString(),    weather : w,    tform : tform,    dform : dform,    loc : loc,    font : font,    zero : zero,    css : css  };  browser.storage.local.set({"prefs" : settings});  $('.wunderground')[0].href = $('.wunderground')[0].href + loc;  $('.wunderground')[1].href = $('.wunderground')[1].href + loc;  console.log($('.wunderground'));}function getWeather() {	let b = new Date();	let c = b;	let a = new Date(expires);	if ((a - c) > 0) {	  console.log('weather already stored');		$("#degrees").text(degrees);		$("#weather").text(weather);		$("#conditions").animate({opacity:1},300)	}	else {		request();	}}function load(paramSettings) {	recall(paramSettings["prefs"]);	if (font === "100") {		$("body, #date").css("font-weight", "100");		$("#conditions").css("font-weight", "300");	}	$("#custom").html(css);	interval = setInterval(function () {		refresh();	}, 1000);	$("body").animate({opacity:1},500);}let hasOwnProperty = Object.prototype.hasOwnProperty;/* taken from https://stackoverflow.com/questions/4994201/is-object-empty */function isEmpty(obj) {  // null and undefined are "empty"  if (obj == null) return true;  // Assume if it has a length property with a non-zero value  // that that property is correct.  if (obj.length > 0)    return false;  if (obj.length === 0)  return true;  // If it isn't an object at this point  // it is empty, but it can't be anything *but* empty  // Is it empty?  Depends on your application.  if (typeof obj !== "object") return true;  // Otherwise, does it have any properties of its own?  // Note that this doesn't handle  // toString and valueOf enumeration bugs in IE < 9  for (let key in obj) {    if (hasOwnProperty.call(obj, key)) return false;  }  return true;}function onError(error) {  console.log(`Error: ${error}`);}$(document).ready(function(){  prefs.then((res) => {    console.log(res);    if (isEmpty(res)) {      console.log('empty');      console.log(res);      let settings = {        background : background,        text : text,        degrees : degrees,        temp : temp,        clock : clock,        expires : expires,        weather : weather,        tform : tform,        dform : dform,        loc : loc,        font : font,        zero : zero,        css : css      };      let store = browser.storage.local.set({"prefs" : settings});      store.then(() => {        refresh();        load({"prefs" : settings});      }, onError);    } else {      refresh();      load(res);    }  });});